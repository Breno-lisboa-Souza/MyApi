// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApi.Data;

#nullable disable

namespace MyApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JogoUsuario", b =>
                {
                    b.Property<int>("JogoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("JogoId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("JogoUsuario");
                });

            modelBuilder.Entity("MyApi.Models.Favorito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("JogoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JogoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Favoritos");
                });

            modelBuilder.Entity("MyApi.Models.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desenvolvedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jogos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Far Cry 6 é um jogo de tiro em primeira pessoa de mundo aberto desenvolvido pela Ubisoft Toronto. Ambientado na ilha fictícia de Yara, os jogadores assumem o papel de Dani Rojas, um guerrilheiro lutando contra o regime opressivo do ditador Anton Castillo. Com um vasto mundo para explorar, combates intensos e uma narrativa envolvente, Far Cry 6 oferece uma experiência cheia de ação e aventura.",
                            Desenvolvedor = "Ubisoft Toronto",
                            Genero = "Tiro, Ação",
                            Nome = "Far Cry 6"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Bloons TD6 é um jogo de estratégia em que os jogadores devem defender seu território contra ondas de balões invasores. O jogo apresenta torres de defesa com habilidades únicas, diversos mapas e modos de jogo, oferecendo uma experiência desafiadora e divertida.",
                            Desenvolvedor = "Ninja Kiwi",
                            Genero = "Estratégia",
                            Nome = "Bloons TD6"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Red Dead Redemption é um jogo de ação e aventura em mundo aberto ambientado no Velho Oeste. Os jogadores assumem o papel de um pistoleiro chamado John Marston, que deve caçar criminosos e enfrentar desafios em uma história épica. O jogo oferece um vasto mundo para explorar, com muitas missões e atividades para realizar.",
                            Desenvolvedor = "Rockstar San Diego",
                            Genero = "Ação, Aventura",
                            Nome = "Red Dead Redemption"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Valorant é um jogo de tiro tático em primeira pessoa desenvolvido pela Riot Games. No jogo, duas equipes competem em partidas de ataque e defesa, utilizando personagens com habilidades únicas. Com combates estratégicos e trabalho em equipe, Valorant oferece uma experiência de jogo emocionante e competitiva.",
                            Desenvolvedor = "Riot Games",
                            Genero = "Tiro em primeira pessoa",
                            Nome = "Valorant"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Counter-Strike: Global Offensive é um jogo de tiro em primeira pessoa competitivo. Os jogadores se juntam a equipes terroristas ou antiterroristas e participam de partidas intensas em diversos modos de jogo. Com uma jogabilidade estratégica e habilidades individuais em teste, CS:GO continua sendo um dos jogos mais populares do gênero.",
                            Desenvolvedor = "Valve",
                            Genero = "Tiro em primeira pessoa",
                            Nome = "Counter-Strike: Global Offensive"
                        });
                });

            modelBuilder.Entity("MyApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PasswordString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Usuario");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Latitude = -23.520024100000001,
                            Longitude = -46.596497999999997,
                            PasswordHash = new byte[] { 27, 141, 221, 174, 51, 144, 184, 9, 94, 252, 88, 152, 208, 64, 185, 61, 170, 167, 32, 147, 68, 137, 50, 226, 92, 30, 38, 16, 197, 160, 146, 93, 131, 213, 197, 158, 31, 210, 30, 241, 25, 188, 68, 38, 107, 81, 153, 158, 24, 105, 114, 48, 64, 183, 106, 34, 139, 98, 196, 53, 67, 60, 100, 200 },
                            PasswordSalt = new byte[] { 152, 132, 195, 113, 169, 175, 49, 87, 104, 101, 2, 204, 54, 74, 233, 136, 32, 2, 116, 66, 145, 107, 234, 107, 92, 235, 211, 220, 222, 135, 24, 175, 97, 76, 123, 133, 243, 19, 37, 6, 174, 74, 3, 132, 169, 235, 143, 183, 65, 154, 64, 21, 29, 46, 84, 88, 243, 76, 152, 146, 148, 150, 116, 224, 115, 6, 4, 177, 214, 79, 111, 168, 63, 142, 79, 240, 207, 119, 150, 135, 146, 57, 157, 54, 182, 201, 74, 79, 137, 196, 53, 189, 189, 121, 39, 157, 230, 163, 84, 106, 204, 197, 190, 180, 219, 149, 92, 202, 252, 92, 53, 154, 195, 91, 60, 216, 137, 64, 176, 116, 193, 102, 233, 63, 157, 219, 14, 61 },
                            PasswordString = "",
                            Perfil = "Admin",
                            Username = "UsuarioAdmin"
                        });
                });

            modelBuilder.Entity("JogoUsuario", b =>
                {
                    b.HasOne("MyApi.Models.Jogo", null)
                        .WithMany()
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyApi.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyApi.Models.Favorito", b =>
                {
                    b.HasOne("MyApi.Models.Jogo", "Jogo")
                        .WithMany()
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
